---
import Layout from "@layout";
import { authStore } from "@stores/auth";
import IconPoint from "@icons/point.astro";
import IconCalendarClock from "@icons/calendar-clock.astro";
import IconCake from "@icons/cake.astro";
import IconMapPin from "@icons/map-pin.astro";
import LeftArrow from "@icons/left-arrow.astro";
import defaultAvatar from "@assets/default-avatar.svg";
import PostCard from "@components/post-card.astro";
import ApiFunctions from "@services/api";

if (!Astro.cookies.get("session")) return Astro.redirect("/login");

const { userLogged } = authStore.get();

const avatar = userLogged.avatar[1]?.secureUrl ?? defaultAvatar.src;
const createdAt = new Date(userLogged.createdAt).toLocaleDateString("es");
const userBd = new Date(userLogged.date).toLocaleDateString("es");
const location = userLogged.location;

const {getUserPosts} = ApiFunctions(Astro.url.origin)

const posts = await getUserPosts(userLogged._id);

---

<Layout page={`@${userLogged?.username}`} description={userLogged?.bio}>
  <section class="profile">
    <a href="/" class="profile__btn--back" title="Go home.">
      <LeftArrow />
    </a>

    <div class="profile__container">
      <img
        class="profile__img"
        src={avatar}
        alt={`${userLogged?.name} avatar.`}
        loading="lazy"
        transition:name="avatar"
        title={userLogged?.name}
      />

      <div>
        <h1 class="profile__h1">
          {userLogged?.name}
          <IconPoint />
          <span class="profile__h1__span">@{userLogged?.username}</span>
        </h1>

        <p class="profile_p">
          {userLogged.bio}
        </p>
        <ul class="profile__ul">
          <li>
            <IconCalendarClock /> Joined at: {createdAt}
          </li>
          <li>
            <IconCake /> Birthday: {userBd}
          </li>
          <li>
            <IconMapPin /> Location: {`${location?.city}, ${location?.country_name}`}
          </li>
        </ul>
      </div>
      <a class="profile__btn--edit" href={`/profile/${userLogged?._id}`}>
        Edit profile
      </a>
    </div>
    

    <div class="profile__container--posts">
      <header class="profile__container--header">
        <button>
          Posts: <strong>{posts?.length}</strong>
        </button>

        <button>
          Followers: <strong>{userLogged?.followers.length}</strong>
        </button>

        <button>
          Followed: <strong>{userLogged?.followed.length}</strong>
        </button>
      </header>

      {posts?.length !== 0 && posts.map((post) => <PostCard post={post} />)}
    </div>
  </section>
</Layout>

<style>
  .profile {
    min-height: 100dvh;
    max-width: var(--max_w);
    margin: 0 auto;
    padding: 6px;
    display: flex;
    flex-flow: column;
  }
  .profile__btn--back {
    position: fixed;
    top: 1%;
    z-index: 3;
    color: var(--color_accent);
    display: flex;
    border: 3px solid var(--color_accent);
    border-radius: 100%;
    padding: 10px;
    cursor: pointer;
  }
  .profile__btn--edit {
    position: sticky;
    top: 0;
    display: flex;
    max-width: fit-content;
    border-radius: var(--border_size);
    padding: var(--padding_boxes);
    background-color: var(--color_accent);
    color: #fff;
    box-shadow: 0 0 4px var(--color_accent_light);
    transition: transform 0.2s ease;

    &:hover {
      transform: scale(0.98);
    }
  }
  .profile__img {
    position: sticky;
    top: 0;
    display: flex;
    aspect-ratio: 4 / 4;
    object-fit: cover;
    object-position: center;
    border-radius: 100%;
    width: 100%;
    max-width: 300px;
    transition: transform 0.2s ease;
  }
  .profile__container {
    display: flex;
    flex-flow: row;
    align-items: flex-start;
    justify-content: space-between;
    padding: var(--padding_boxes) 0;
  }
  .profile__container--posts {
    display: flex;
    flex-flow: column;
  }
  .profile__container--header {
    position: sticky;
    top: 0;
    z-index: 2;
    border-top: 1px solid var(--color_secondary);
    border-bottom: 1px solid var(--color_secondary);
    display: flex;
    flex-flow: row;
    justify-content: space-around;
    align-items: center;
    padding: var(--padding_boxes);
    backdrop-filter: blur(1em);

    & > button {
      padding: var(--padding_boxes);
    }
  }
  .profile__h1 {
    display: flex;
  }
  .profile__h1__span {
    color: var(--color_secondary_text);
  }
  .profile__ul {
    color: var(--color_secondary_text);
  }
</style>
