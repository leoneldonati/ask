---
import Layout from "@layout";
import IconPoint from "@icons/point.astro";
import IconCalendarClock from "@icons/calendar-clock.astro";
import IconCake from "@icons/cake.astro";
import IconMapPin from "@icons/map-pin.astro";
import LeftArrow from "@icons/left-arrow.astro";
import defaultAvatar from "@assets/default-avatar.svg";
import PostCard from "@components/post-card.astro";
import ApiFunctions from "@services/api";
import { COOKIE } from "@const";
import StaticsHeader from "@components/react/statics-header";
import { authStore } from "@stores/auth";

if (!Astro.cookies.get(COOKIE.name)) return Astro.redirect("/login");

const { getUserPosts, getUser } = ApiFunctions(Astro.url.origin);

const user = await getUser(Astro.params?.id);

const avatar = user?.avatar[1]?.secureUrl ?? defaultAvatar.src;
const createdAt = new Date(user.createdAt).toLocaleDateString("es");
const userBd = new Date(user.date).toLocaleDateString("es");
const location = user?.location;

const posts = await getUserPosts(Astro.params?.id);

const isThisUser = authStore.get().userLogged._id === user._id
---

<Layout page={`@${user?.username}`} description={user?.bio}>
  <section class="profile">
    <a href="/" class="profile__btn--back" title="Go home.">
      <LeftArrow />
    </a>

    <div class="profile__container">
      <div class="profile__container--user">
        <img
          class="profile__img"
          src={avatar}
          alt={`${user?.name} avatar.`}
          loading="lazy"
          transition:name="avatar"
          title={user?.name}
        />

        <div>
          <h1 class="profile__h1">
            {user?.name}
            <IconPoint />
            <span class="profile__h1__span">@{user?.username}</span>
          </h1>

          <p class="profile_p">
            {user.bio}
          </p>
          <ul class="profile__ul">
            <li>
              <IconCalendarClock /> Joined at: {createdAt}
            </li>
            <li>
              <IconCake /> Birthday: {userBd}
            </li>
            <li>
              <IconMapPin /> Location: {
                `${location?.city}, ${location?.country_name}`
              }
            </li>
          </ul>
        </div>
        {
          isThisUser &&
          <a class="profile__btn--edit" href={`/profile/${user?._id}`}>
            Edit profile
          </a>
        }
      </div>

      <div class="profile__container--posts">
        
        <StaticsHeader posts={posts} user={user} />
        {posts?.length !== 0 && posts.map((post) => <PostCard post={post} />)}
      </div>
    </div>
  </section>
</Layout>

<style>
  .profile {
    position: relative;
    height: 100dvh;
    max-width: var(--max_w);
    margin: 0 auto;
    padding: 6px;
    display: flex;
    flex-flow: column;
  }
  .profile__container {
    overflow-y: scroll;
    overflow-x: hidden;
    scrollbar-width: none;
  }
  .profile__btn--back {
    position: fixed;
    top: 1%;
    z-index: 3;
    color: var(--color_accent);
    display: flex;
    border: 3px solid var(--color_accent);
    border-radius: 100%;
    padding: 10px;
    cursor: pointer;
  }
  .profile__btn--edit {
    position: absolute;
    bottom: 2%;
    right: 0;
    display: flex;
    max-width: fit-content;
    border-radius: var(--border_size);
    padding: var(--padding_boxes);
    background-color: var(--color_accent);
    color: #fff;
    box-shadow: 0 0 4px var(--color_accent_light);
    transition: transform 0.2s ease;

    &:hover {
      transform: scale(0.98);
    }
  }
  .profile__img {
    position: sticky;
    top: 0;
    display: flex;
    aspect-ratio: 4 / 4;
    object-fit: cover;
    object-position: center;
    border-radius: 100%;
    width: 100%;
    max-width: 300px;
    transition: transform 0.2s ease;
  }
  .profile__container--user {
    position: relative;
    display: flex;
    flex-flow: row;
    align-items: flex-start;
    justify-content: space-between;
    padding: var(--padding_boxes) 0;
  }
  .profile__container--posts {
    display: flex;
    flex-flow: column;
  }

  
  .profile__h1 {
    display: flex;
  }
  .profile__h1__span {
    color: var(--color_secondary_text);
  }
  .profile__ul {
    color: var(--color_secondary_text);
  }
</style>


