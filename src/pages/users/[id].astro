---
import Layout from "@layout";
import { authStore } from "@stores/auth";
import { parseDate } from "@helpers/date";
import PostCardProfile from "@components/post-card-profile.astro";
import IconPoint from "@icons/point.astro";
import IconCalendarClock from "@icons/calendar-clock.astro";
import IconCake from "@icons/cake.astro";
import IconMapPin from "@icons/map-pin.astro";

if (!Astro.cookies.get("session")) return Astro.redirect("/login");

const { userLogged } = await authStore.get();

const { _id: userId } = userLogged;
const id = Astro.params?.id;

if (id === userId) return Astro.redirect("/profile");

const headers = new Headers();
headers.append("Cookie", `session=${Astro.cookies.get("session")?.value}`);
const res = await fetch(`${Astro.url.origin}/api/users/${id}`, { headers });

if (!res.ok) return Astro.redirect("/");

const user = await res.json();

const avatar = user.avatar.original.secureUrl;

const userBd = parseDate(user.date);
const createdAt = parseDate(user.createdAt);

console.log(user);
---

<Layout page={`@${user.username}`} description={user.bio}>
  <section class="profile">
    <img
      class="profile__img"
      src={avatar}
      alt={`${user.name} avatar.`}
      loading="lazy"
      transition:name="avatar"
      title={user.name}
    />

    <div class="profile__container">
      <h1 class="profile__h1">
        {user.name}
        <IconPoint />
        <span class="profile__h1__span">@{user.username}</span>
      </h1>

      <p class="profile_p">
        {user.bio}
      </p>
      <ul class="profile__ul">
        <li>
          <IconCalendarClock /> Joined at: {createdAt}
        </li>
        <li>
          <IconCake /> Birthday: {userBd}
        </li>
        <li>
          <IconMapPin />
          {user.location ? user.location : "None"}
        </li>
      </ul>
    </div>

    <span class="posts--length">
      {user.posts.length} posts.
    </span>
    <hr />
    <div class="profile__container--posts">
      {
        user.posts.length !== 0 &&
          user.posts.map((post) => <PostCardProfile post={post} />)
      }
    </div>
  </section>
</Layout>
<style>
  .profile {
    min-height: 100dvh;
    max-width: var(--max_w);
    margin: 0 auto;
    padding: 6px;
  }
  .profile__img {
    display: flex;
    aspect-ratio: 4 / 4;
    object-fit: cover;
    object-position: center;
    border-radius: 100%;
    max-width: 400px;
    margin: 0 auto;
    box-shadow: 0 0 8px var(--color_secondary);
  }
  .profile__container {
    position: relative;
    margin: 16px 0;
  }
  .profile__container--posts {
    width: 100%;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-auto-rows: auto;
  }
  .profile__h1 {
    display: flex;
  }
  .profile__h1__span {
    color: var(--color_secondary_text);
  }
  .profile__ul {
    color: var(--color_secondary_text);
  }
  .posts--length {
    display: block;
    text-align: center;
    margin-bottom: 2px;
  }
</style>
