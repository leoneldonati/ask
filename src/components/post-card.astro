---
import Carrousell from "./carrousell.astro";
import PostImage from "./post-image.astro";
import Heart from "@icons/heart.astro";
import { authStore } from "@stores/auth";
import ActionBtn from "./react/action-btn";
import Comment from "@icons/comment.astro";
import PostHeaderTop from "./post-header-top.astro";
interface Props {
  post: Post;
}

const { userLogged } = await authStore.get();

const { post } = Astro.props;

const user = post.userOwner;

const avatar = user.avatar[0].secureUrl;
const imagesPaths = post?.images?.map((path) => path.secureUrl);

const hasMultipleImages = imagesPaths.length > 1;
const hasImages = post?.images.length !== 0;
---

<article class="post">
  <PostHeaderTop
    name={user.name}
    id={user._id}
    createdAt={post.createdAt}
    username={post.userOwner.username}
    content={post.content}
  />

  <div class="post__container--images">
    {
      hasImages ? (
        hasMultipleImages ? (
          <Carrousell imagesPaths={imagesPaths} />
        ) : (
          <PostImage postImage={imagesPaths[0]} />
        )
      ) : null
    }
  </div>
  <a
    class="post__btn"
    title=`Go to @${user?.username} profile!`
    href={`/users/${user?._id}`}
  >
    <img
      src={avatar ?? ""}
      alt={user.name}
      class="post__btn__avatar"
      loading="lazy"
    />
  </a>

  <div class="post__container--actions-btn">
    <ActionBtn
      length={post?.likes?.length}
      payload={{
        from: userLogged?._id,
        to: post._id,
        likes: post.likes,
        ownerName: user?.name,
      }}
      action="like"
      client:visible
    >
      <Heart />
    </ActionBtn>
    <ActionBtn
      length={post?.comments?.length}
      payload={{
        from: userLogged?._id,
        to: post._id,
        comments: post?.comments,
        ownerName: user?.name,
      }}
      action="comment"
      client:visible
    >
      <Comment />
    </ActionBtn>
  </div>
</article>

<style>
  .post {
    position: relative;
    display: grid;
    grid-template-areas:
      "info avatar"
      "images images"
      "buttons buttons";
    grid-template-columns: 1fr auto;
    gap: 6px;
    border-bottom: 1px solid var(--color_secondary);
    padding: var(--padding_boxes) 8px;
    width: 100%;
  }

  .post__container--actions-btn {
    grid-area: buttons;
    width: 100%;
    max-width: 30%;
    margin: 0 auto;

    width: 100%;
    display: flex;
    justify-content: space-around;
    align-items: center;
  }
  .post__container--images {
    grid-area: images;
  }

  .post__image {
    aspect-ratio: 16 / 9;
    object-fit: cover;
    object-position: center;
    border-radius: var(--border_size);
  }

  .post__btn {
    grid-area: avatar;
    display: flex;
    max-width: fit-content;
    border: 1px solid var(--color_secondary);
    border-radius: 100%;
    overflow: hidden;
    cursor: pointer;
  }
  .post__btn__avatar {
    aspect-ratio: 4 / 4;
    object-fit: cover;
    object-position: center;
  }
</style>
