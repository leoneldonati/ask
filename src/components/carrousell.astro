---
import LeftArrow from "@icons/left-arrow.astro";
import RightArrow from "@icons/right-arrow.astro";

interface Props {
  imagesPaths: string[];
}

const { imagesPaths } = Astro.props;
---

<picture>
  <div id="container">
    {
      imagesPaths.map((path, index) => (
        <img src={path} alt={`Post image ${index}.`} loading="lazy" />
      ))
    }
  </div>
  <button id="right">
    <RightArrow />
  </button>
  <button id="left" style="opacity: 0; pointer-events: none;">
    <LeftArrow />
  </button>
</picture>
<script defer>
  const $rightBtn = document.querySelector("#right")
  const $leftBtn = document.querySelector("#left")
  const $container = document.querySelector("#container")

  const imagesLength = $container.getElementsByTagName("img").length;
  let position = 0;

  $container.addEventListener("transitionend", () => {
    if (position === imagesLength - 1) {
      $leftBtn.style.opacity = "1";
      $leftBtn.style.pointerEvents = 'auto';
      $rightBtn.style.opacity = "0";
      $rightBtn.style.pointerEvents = 'none';

      return;
    }

    if (position === 0) {
      $rightBtn.style.opacity = "1";
      $rightBtn.style.pointerEvents = 'auto';
      $leftBtn.style.pointerEvents = 'none';
      $leftBtn.style.opacity = "0";
      return;
    }
  });
  $rightBtn.addEventListener("click", () => {
    if (position === imagesLength - 1) {
      return;
    }

    position += 1;

    $container.style.transform = `translateX(-${position * 100}%)`;
  });

  $leftBtn.addEventListener("click", () => {
    if (position === 0) return;

    position -= 1;

    $container.style.transform = `translateX(${position * 100}%)`;
  });
</script>
<style>
  picture {
    position: relative;
    max-width: 100%;
    overflow: hidden;
    border-radius: var(--border_size);

    #container {
      display: flex;
      flex-flow: row nowrap;
      transition: transform 0.2s ease-in-out;
      & > img {
        aspect-ratio: 16 / 9;
      }
    }
    & > button {
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      z-index: 3;
      background: var(--color_secondary);
      padding: 10px;
      border: none;
      border-radius: 100%;
      display: flex;
      cursor: pointer;

      & > svg {
        transition: transform .2s ease-out;
      }
      &:active > svg {
        transform: rotate(-20deg);
      }
    }
    & > button:nth-child(2) {
      right: 0;
      &:active > svg {
        transform: rotate(20deg);
      }
    }
  }
</style>
