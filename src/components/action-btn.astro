---
import { authStore } from "@stores/auth";
const { userLogged } = await authStore.get();

interface Props {
  action: "like" | "comment";
  payload: {
    to: string;
    from: string;
    likes?: string[];
    comments?: any;
    ownerName: string;
  };
  length: number;
}

const { length, payload, action } = Astro.props;

const hasLiked =
  action === "like" && payload.likes?.find((like) => like === userLogged?._id);
const hasCommented =
  action === "comment" &&
  payload.comments?.find((comment) => comment?.owner?._id === userLogged?._id);

// MANEJAR ESTILOS DEL BOTON
function handleStyles() {
  if (action === "comment" && hasCommented) return "";

  if (action === "like" && hasLiked)
    return "color: #fff; background: linear-gradient(to top, var(--color_accent), var(--color_accent_light)); box-shadow: 0 5px 2px var(--color_accent_light);";
}

// MANEJAR CAMBIO DE TITULO DEL BOTON
function handleTitle() {
  if (action === "comment") {
    return hasCommented
      ? "You has commented this!"
      : `Share with ${payload?.ownerName}!`;
  }

  if (action === "like") {
    return hasLiked ? "Liked!" : "Like this post!";
  }
}
---

{
  action === "comment" ? (
    <a
      href={`/post/comment?from=${userLogged?._id}&to=${payload?.to}`}
      class="action-btn"
      data-payload={JSON.stringify(Astro.props)}
      style={handleStyles()}
      title={handleTitle()}
    >
      <slot name="icon" />
      <span class="likes">{length}</span>
    </a>
  ) : (
    <button
      class="action-btn"
      data-payload={JSON.stringify(Astro.props)}
      style={handleStyles()}
      title={handleTitle()}
    >
      <slot name="icon" />
      <span class="likes">{length}</span>
    </button>
  )
}

<script>
  const $btn = document.querySelector(".action-btn") as HTMLButtonElement;
  const $likesContainer = document.querySelector(".likes") as HTMLElement;
  const dataParsed = JSON.parse($btn.getAttribute("data-payload"));

  async function sendLike() {
    try {
      const res = await fetch(
        `http://localhost:4321/api/post-actions?type=${dataParsed?.action}&from=${dataParsed?.payload?.from}&to=${dataParsed.payload?.to}`,
        {
          method: "POST",
        }
      );
      if (!res.ok) return;

      const data = await res.json();

      const hasLiked = data?.post?.likes?.find(
        (id) => dataParsed?.payload?.from === id
      );

      if (hasLiked) {
        $btn.style.color = "#fff";
        $btn.style.background =
          "linear-gradient(to top, var(--color_accent), var(--color_accent_light))";
        $btn.style.boxShadow = "0 5px 2px var(--color_accent_light)";
        $btn.setAttribute("title", "Liked!");
        const updatedlikesLength = data?.post?.likes?.length;

        $likesContainer.innerText = updatedlikesLength?.toString();
        return;
      }
      $btn.style.color = "";
      $btn.style.background = "";
      $btn.style.boxShadow = "";
      $btn.setAttribute("title", "Like this post!");

      const updatedlikesLength = data?.post?.likes?.length;

      $likesContainer.innerText = updatedlikesLength?.toString();
    } catch (e) {}
  }
  $btn.addEventListener("click", sendLike);
</script>

<style>
  .action-btn {
    background: none;
    border: none;
    padding: 3px 6px;
    border-top-left-radius: 20%;
    border-top-right-radius: 20%;
    cursor: pointer;
    transition:
      color 0.2s ease-in,
      transform 0.2s ease-out,
      box-shadow 0.2s ease;
    &:hover {
      transform: scale(1.02);
    }
    &:active {
      transform: scale(0.95);
    }
  }
</style>
